---

kafka_controller_version: '3.7.1'
kafka_controller_image: "docker.io/bitnami/kafka:{{ kafka_controller_version }}"
kafka_controller_host_dir: /data/controller-data
kafka_cluster_id: NmYzNzQ4YzE0Nzc4NDkwZm 

# container vars
container_image_list:
  - "{{ kafka_controller_image }}"
container_name: kafka_controller
container_run_args: >-
  -e KAFKA_CFG_NODE_ID={{ ansible_eth0.ipv4.address.split('.')[3] }}
  -e KAFKA_CFG_PROCESS_ROLES=controller
  -e KAFKA_KRAFT_CLUSTER_ID={{ kafka_cluster_id }}
  -e KAFKA_CFG_LISTENERS=CONTROLLER://:9093
  -e KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT
  -e KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
  -v {{ kafka_controller_host_dir }}:/bitnami/kafka:z
  -p 9093:9093
  -e KAFKA_CFG_CONTROLLER_QUORUM_VOTERS={%- for host in groups['kafka-kraft'] -%}
  {%- if loop.last -%}
  {{hostvars[host]['ansible_eth0']['ipv4']['address'].split('.')[3] }}@{{ host }}:9093
  {%- else -%}
  {{ hostvars[host]['ansible_eth0']['ipv4']['address'].split('.')[3] }}@{{ host }}:9093,
  {%- endif -%}
  {%- endfor %}
container_state: running

  #container_firewall_ports:
  # - 2380/tcp
  # - 2379/tcp

container_restart: on-failure
service_files_dir: /usr/local/lib/systemd/system
service_files_owner: root
service_files_group: root
service_files_mode: "0644"
systemd_scope: system
service_name: "{{ container_name }}-container.service"
systemd_timeout_start_sec: "15"
systemd_restart_sec: "30"
systemd_tempdir: "{{ '/tmp' if ansible_os_family == 'RedHat' and
  ansible_distribution_major_version | int == 7 else '%T' }}"
container_run_as_user: root
container_run_as_group: root
container_stop_timeout: "15"

# SystemD dependencies (some are hardcoded; see templates)
systemd_after: [network.target]
systemd_before: []
systemd_conflicts: []
systemd_requiredby: []
systemd_requires: []
systemd_wantedby: []
systemd_wants: []

